name: CI Pipeline

on:
  push:
    branches:
      - main
      - 'feature/*'
  pull_request:
    branches:
      - main
      - 'feature/*'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v3

      - name: Java installieren
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Gradle Wrapper ausführbar machen
        run: chmod +x ./Code/airport-service/gradlew

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Unit Tests ausführen
        working-directory: ./Code/airport-service
        run: ./gradlew test

      - name: Test Report veröffentlichen
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Unit Test Results
          path: ./Code/airport-service/build/test-results/test/*.xml
          reporter: java-junit

      - name: Projekt bauen (ohne Tests, da bereits ausgeführt)
        working-directory: ./Code/airport-service
        run: ./gradlew assemble