name: CI Pipeline

on:
  push:
    branches:
      - main
      - 'feature/*'
  pull_request:
    branches:
      - main
      - 'feature/*'

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v3

      - name: Java installieren
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle Wrapper ausführbar machen
        run: chmod +x ./Code/airport-service/gradlew

      - name: Unit Tests ausführen
        working-directory: ./Code/airport-service
        run: ./gradlew test

      - name: Test Report veröffentlichen
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Unit Test Results
          path: ./Code/airport-service/build/test-results/test/*.xml
          reporter: java-junit

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test  # Nur ausführen wenn Tests erfolgreich

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v3

      - name: Java installieren
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle Wrapper ausführbar machen
        run: chmod +x ./Code/airport-service/gradlew

      - name: Application bauen
        working-directory: ./Code/airport-service
        run: ./gradlew build -x test  # Tests überspringen, da bereits gelaufen

      - name: Build-Artefakte speichern
        uses: actions/upload-artifact@v3
        with:
          name: application-jar
          path: ./Code/airport-service/build/libs/*.jar